use std::path::PathBuf;

use crate::thermal_capturer::ThermalCapturerResult;

pub struct RecorderStreamParams {
    pub width: usize,
    pub height: usize,
    pub framerate: usize,
}

#[derive(Debug, Clone, Copy, PartialEq)]
pub enum RecorderState {
    Initial,
    Recording,
    Done,
}

///
/// Represents an output stream that records the images generated by the thermal camera.
/// Can record a video, take a photo etc.
///
pub trait Recorder: Send + Sync {
    ///
    /// Begin the recording process.
    /// The actual image parameters are passed from the thermal capturer.
    ///
    fn start(&mut self, params: RecorderStreamParams) -> Result<(), anyhow::Error>;

    ///
    /// Process a single frame of thermal data.
    ///
    fn process_result(&mut self, result: &ThermalCapturerResult) -> Result<(), anyhow::Error>;

    ///
    /// Shall return true once this recorder has done it's job and can be disposed of.
    ///
    fn state(&self) -> RecorderState;

    ///
    /// Return the paths to any files created by this recorder.
    ///
    fn files_created(&self) -> Vec<PathBuf>;

    ///
    /// A request to stop the recording process. No more frames will be provided,
    /// the recorder should return true from is_done() once it has finished.
    ///
    fn stop(&mut self) -> Result<(), anyhow::Error>;
}
